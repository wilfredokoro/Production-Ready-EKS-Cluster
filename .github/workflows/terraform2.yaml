+name: 'Provision VPC then EKS'

on:
  workflow_dispatch:
    inputs:
      tfvars_file:
        description: 'Path to the .tfvars file for VPC (default: build.tfvars)'
        required: true
        default: 'build.tfvars'
      action:
        type: choice
        description: 'Plan or Apply'
        options:
          - plan
          - apply
        required: true
        default: 'apply'

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

permissions:
  contents: read

jobs:
  CheckOut-Repo:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

  Setting-Up-Terraform:
    runs-on: ubuntu-latest
    needs: CheckOut-Repo

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.4

  Provision-VPC:
    runs-on: ubuntu-latest
    needs: Setting-Up-Terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.4

      - name: Terraform Initialize (VPC)
        working-directory: terraform/vpc
        run: terraform init

      - name: Terraform Plan (VPC)
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: terraform/vpc
        run: terraform plan -var-file=${{ github.event.inputs.tfvars_file }} -input=false

      - name: Terraform Apply (VPC)
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: terraform/vpc
        run: terraform apply -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false

  Provision-EKS:
    runs-on: ubuntu-latest
    needs: Provision-VPC

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.4

      - name: Terraform Initialize (EKS)
        working-directory: terraform/eks
        run: terraform init

      - name: Terraform Plan (EKS)
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: terraform/eks
        run: terraform plan -var-file=eks.tfvars -input=false

      - name: Terraform Apply (EKS)
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: terraform/eks
        run: terraform apply -auto-approve -var-file=eks.tfvars -input=false