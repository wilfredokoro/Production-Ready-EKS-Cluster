name: 'Provision VPC then EKS with OIDC'

on:
  workflow_dispatch:
    inputs:
      tfvars_file:
        description: 'Path to the .tfvars file for VPC (default: build.tfvars)'
        required: true
        default: 'build.tfvars'
      action:
        type: choice
        description: 'Plan or Apply'
        options:
          - plan
          - apply
        required: true
        default: 'apply'

permissions:
  id-token: write # Required for OIDC
  contents: read

jobs:
  CheckOut-Repo:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

  Setting-Up-Terraform:
    runs-on: ubuntu-latest
    needs: CheckOut-Repo

    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.4

  Configure-AWS-Credentials:
    runs-on: ubuntu-latest
    needs: Setting-Up-Terraform

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::887998956998:role/GitHubActionsRole # Replace with your IAM role ARN
          aws-region: us-east-1
          role-session-name: GitHubActionsSession
          audience: sts.amazonaws.com

      - name: Verify AWS Authentication
        run: aws sts get-caller-identity

      - name: Debug AWS Credentials
        run: |
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY"
                      
  Provision-VPC:
    runs-on: ubuntu-latest
    needs: Configure-AWS-Credentials

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.4

      - name: Terraform Initialize (VPC)
        working-directory: terraform/vpc
        env:
          AWS_REGION: us-east-1
        run: |
          terraform init
                
      - name: Terraform Plan (VPC)
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: terraform/vpc
        run: terraform plan -var-file=${{ github.event.inputs.tfvars_file }} -input=false

      - name: Terraform Apply (VPC)
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: terraform/vpc
        run: terraform apply -auto-approve -var-file=${{ github.event.inputs.tfvars_file }} -input=false

  Provision-EKS:
    runs-on: ubuntu-latest
    needs: Provision-VPC

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.8.4

      - name: Terraform Initialize (EKS)
        working-directory: terraform/eks
        run: |
          terraform init -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"


      - name: Terraform Plan (EKS)
        if: ${{ github.event.inputs.action == 'plan' }}
        working-directory: terraform/eks
        run: terraform plan -var-file=eks.tfvars -input=false

      - name: Terraform Apply (EKS)
        if: ${{ github.event.inputs.action == 'apply' }}
        working-directory: terraform/eks
        run: terraform apply -auto-approve -var-file=eks.tfvars -input=false